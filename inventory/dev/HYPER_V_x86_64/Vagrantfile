# -*- mode: ruby -*-
# vi: set ft=ruby :


# 下载镜像
# vagrant box add centos/7 http://aiziyuer.synology.me:10080/cloud.centos.org/centos/7/vagrant/x86_64/CentOS-7-x86_64-Vagrant-1905_01.HyperV.box
# 安装必须的插件
# vagrant plugin install vagrant-reload
# 启动镜像
# vagrant up

# vagrant destroy

boxes = [
  {
      :name => "master1",
      :eth0 => "192.168.200.11",
      :mem => "512",
      :cpu => "1",
  },
  {
      :name => "storage1",
      :eth0 => "192.168.200.21",
      :mem => "512",
      :cpu => "1",
      :disks => "10,10"
  },
  {
      :name => "gateway1",
      :eth0 => "192.168.200.31",
      :mem => "512",
      :cpu => "1"
  },
  {
      :name => "snat1",
      :eth0 => "192.168.200.41",
      :mem => "512",
      :cpu => "1"
  },
  {
      :name => "node1",
      :eth0 => "192.168.200.51",
      :mem => "512",
      :cpu => "1",
      :disks => "10"
  },
  {
      :name => "node2",
      :eth0 => "192.168.200.52",
      :mem => "512",
      :cpu => "1",
      :disks => "10"
  },
  {
    :name => "node3",
    :eth0 => "192.168.200.53",
    :mem => "512",
    :cpu => "1",
    :disks => "10"
  },
  {
    :name => "node4",
    :eth0 => "192.168.200.54",
    :mem => "512",
    :cpu => "1",
    :disks => "10"
  }
]

Vagrant.configure("2") do |config|
  
  config.vm.box = "centos/7"

  # 循环设置每台虚拟机
  boxes.each do |box|
    config.vm.define box[:name] do |config|
      config.vm.hostname = box[:name]

      # 配置内存和CPU
      config.vm.provider "hyperv" do |h|
        h.cpus=box[:cpu]
        h.memory=box[:mem]
        
        if box.key?("disks")
          box[:disks].split(',').each_with_index  do |size, index|
            unless File.exist?('./secondDisk.vdi')
              h.customize ['createhd', '--filename', "./#{box[:name]}_#{index}.vdi", '--variant', 'Fixed', '--size', size * 1024]
            end
            h.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', index, '--device', 0, '--type', 'hdd', '--medium', "./#{box[:name]}_#{index}.vdi"]
          end
        end

      end

      # 配置 IP
      config.vm.network "private_network", bridge: "NAT-Switch"
      config.vm.provision "shell", inline: <<-SHELL

echo "Changeme_123" | passwd --stdin root
sed -i 's:^PasswordAuthentication no:PasswordAuthentication yes:g' /etc/ssh/sshd_config
systemctl restart sshd
cat<<-'EOF' >/etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=static
DEFROUTE=yes
NAME=eth0
DEVICE=eth0
ONBOOT=yes
IPADDR=#{ box[:eth0] }
NETMASK=255.255.255.0
GATEWAY=192.168.200.1
PEERDNS=yes
DNS1=10.10.10.254
EOF

sudo ifdown eth0
sudo ifup eth0

      SHELL

    end
  end

end