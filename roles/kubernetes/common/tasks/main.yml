---
- name: ensures dirs
  file: path={{ item }} state=directory
  with_items:
    - /etc/systemd/system
    - /etc/kuberentes/mainifest

- name: disable system swap
  shell: "swapoff -a"

- name: removme current swaps from fstab
  lineinfile:
    dest: /etc/fstab
    regexp: '(?i)^([^#][\S]+\s+(none|swap)\s+swap.*)'
    line: '# \1'
    backrefs: yes
    state: present

- name: add kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  ignore_errors: true
  with_items:
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
    - nf_conntrack_ipv4
    - br_netfilter

- name: handle sysctl.conf
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { name: "vm.swappiness", value: "0" }
    - { name: "net.bridge.bridge-nf-call-iptables", value: "1" }
    - { name: "net.bridge.bridge-nf-call-ip6tables", value: "1" }
    - { name: "net.ipv4.ip_forward", value: "1" }

- name: disable invalid service config
  shell: |
    rm -rf /etc/systemd/system/kubelet.service.d || true
    rm -rf /usr/lib/systemd/system/kubelet.service || true
    rm -rf /usr/lib/systemd/system/kubelet.service.d || true

- name: get docker cgroup driver
  shell: |
    docker info 2>/dev/null | sed -n 's/Cgroup Driver:\s\+\(\S\+\)/\1/p'
  register: docker_cgroup_driver

- set_fact: docker_cgroup_driver={{ docker_cgroup_driver.stdout | default('cgroupfs') }}

- name: add kubelet services
  template: src={{ item.src }} dest={{ item.dest }} mode=0644
  with_items:
    - { src: kubelet.service.j2, dest: "/etc/systemd/system/kubelet.service" }

- name: handle cni-plugins
  unarchive:
    src: "/tmp/repository/cni-plugins_linux_amd64.tgz"
    dest: "/opt/cni/bin"
    remote_src: yes

- name: handle kubelet services
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted
    enabled: yes
