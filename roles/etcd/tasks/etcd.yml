---

- name: 1.1 ensures etcd dirs
  file: path={{ item }} state=directory
  with_items:
   - /etc/systemd/system
   - /etc/etcd/certs
   - /var/lib/etcd

- name: 1.1 create etcd pv
  when:
   - etcd_disk_names | default('') | length > 0
  lvg:
    vg: etcd
    pvs: "{{ etcd_disk_names }}"

- name: 1.2 prepare etcd data disk
  when:
   - etcd_disk_names | default('') | length > 0
  lvol:
    vg: etcd
    lv: data
    size: 100%vg
    state: present
  register: create_lv_etcd_data

- name: 1.2 format etcd data disk
  when:
   - etcd_disk_names | default('') | length > 0
   - create_lv_etcd_data is defined
   - create_lv_etcd_data.changed
  mount:
    src: /dev/mapper/etcd-data
    path: /var/lib/etcd
    fstype: "{{ FS_TYPE | default('xfs') }}"
    state: mounted

- name: 1.3 install cfssl binaries
  when: "'master' in group_names"
  copy: remote_src=yes src={{ item.src }} dest={{ item.dest | default("/usr/local/bin") }} mode=0755
  with_items:
   - { src: "/tmp/repository/cfssl_v{{ cfssl_version }}_linux_amd64", dest: '/usr/local/bin/cfssl'}
   - { src: "/tmp/repository/cfssljson_v{{ cfssl_version }}_linux_amd64", dest: '/usr/local/bin/cfssljson'}

- name: 1.4 install etcd binaries
  when: "'master' in group_names"
  unarchive: 
   src: "/tmp/repository/etcd_{{ etcd_version }}_linux_amd64.tar.gz"
   dest: '/usr/local/bin'
   remote_src: yes
   extra_opts: 
    - --strip-components=1
   exclude:
    - 'Documentation'
    - 'README.md'
    - 'README-etcdctl.md'
    - 'READMEv2-etcdctl.md'

- name: 1.5 copy etcd root-ca certs
  copy: src={{ item }} dest=/etc/etcd/certs/
  with_fileglob:
    - '../files/etcd/certs/ca*.json'

- name: 1.6 prepare generate etcd ca
  when:
    - groups['master'][0] == inventory_hostname
  shell: |
    cd /etc/etcd/certs
    cfssl gencert -initca ca-csr.json | cfssljson -bare ca -

- name: 1.7 fetch generated ca to local /tmp
  when:
    - groups['master'][0] == inventory_hostname
  fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: yes
  with_items:
   - {src: /etc/etcd/certs/ca.pem, dest: '/tmp/etcd/certs/' }
   - {src: /etc/etcd/certs/ca-key.pem, dest: '/tmp/etcd/certs/' }

- name: 1.8 copy etcd root-ca certs
  copy: src={{ item }} dest=/etc/etcd/certs/
  with_fileglob:
    - '../files/etcd/certs/*'
    - '/tmp/etcd/certs/*.pem'

- name: 1.9 copy etcd server csr
  template: src={{ item.src }} dest={{ item.dest }} mode=0755
  with_items:
   - {src: etcd/certs/config.json.j2, dest: '/etc/etcd/certs/config.json' }
  register: etcd_certs_config

- name: 1.10 generate etcd server/peer certs
  shell: |
    cd /etc/etcd/certs
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
     -profile=client client.json | cfssljson -bare client
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=server config.json | cfssljson -bare server
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=peer config.json | cfssljson -bare peer

- name: 1.11 config etcd's config and service
  template: src={{ item.src }} dest={{ item.dest }} mode=0500
  with_items:
   - {src: etcd/etcd.conf.j2, dest: '/etc/etcd/etcd.conf' }
   - {src: etcd.service.j2, dest: '/etc/systemd/system/etcd.service'}

- name: 1.12 try restart etcd daemon
  systemd:
    name: etcd
    daemon_reload: yes
    state: started
    enabled: yes

- command: systemctl is-active etcd